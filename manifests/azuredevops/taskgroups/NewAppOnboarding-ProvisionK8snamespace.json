{
	"category": "Deploy",
	"description": "Provision a k8s namespace for an app.",
	"friendlyName": "NewAppOnboarding - Provision K8s namespace",
	"iconUrl": "https://cdn.vsassets.io/v/M149_20190322.5/_content/icon-meta-task.png",
	"inputs": [
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "appenvironment",
			"label": "appenvironment",
			"defaultValue": "",
			"required": true,
			"type": "string",
			"helpMarkDown": "",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "appname",
			"label": "appname",
			"defaultValue": "",
			"required": true,
			"type": "string",
			"helpMarkDown": "",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "kubernetes_cluster",
			"label": "kubernetes_cluster",
			"defaultValue": "",
			"required": true,
			"type": "connectedService:kubernetes",
			"helpMarkDown": "Select a Kubernetes service connection.",
			"groupName": ""
		}
	],
	"instanceNameFormat": "Task group: NewAppOnboarding - Provision K8s namespace - Copy $(appenvironment)",
	"name": "NewAppOnboarding - Provision K8s namespace - Copy",
	"parentDefinitionId": null,
	"runsOn": [
		"Agent",
		"DeploymentGroup"
	],
	"tasks": [
		{
			"alwaysRun": false,
			"condition": "succeeded()",
			"continueOnError": false,
			"displayName": "Create k8s namespace",
			"enabled": true,
			"inputs": {
				"connectionType": "Kubernetes Service Connection",
				"kubernetesServiceEndpoint": "$(kubernetes_cluster)",
				"azureSubscriptionEndpoint": "",
				"azureResourceGroup": "",
				"kubernetesCluster": "$(kubernetes_prod_cluster)",
				"useClusterAdmin": "false",
				"namespace": "",
				"command": "create",
				"useConfigurationFile": "false",
				"configurationType": "configuration",
				"configuration": "",
				"inline": "",
				"arguments": "namespace $(appname)-$(appenvironment)",
				"secretType": "dockerRegistry",
				"secretArguments": "",
				"containerRegistryType": "Azure Container Registry",
				"dockerRegistryEndpoint": "",
				"azureSubscriptionEndpointForSecrets": "",
				"azureContainerRegistry": "",
				"secretName": "",
				"forceUpdate": "true",
				"configMapName": "",
				"forceUpdateConfigMap": "false",
				"useConfigMapFile": "false",
				"configMapFile": "",
				"configMapArguments": "",
				"versionOrLocation": "version",
				"versionSpec": "1.12.5",
				"checkLatest": "false",
				"specifyLocation": "",
				"cwd": "$(System.DefaultWorkingDirectory)",
				"outputFormat": "json"
			},
			"task": {
				"id": "cbc316a2-586f-4def-be79-488a1f503564",
				"definitionType": "task",
				"versionSpec": "1.*"
			},
			"timeoutInMinutes": 0,
			"environment": {}
		},
		{
			"alwaysRun": false,
			"condition": "succeeded()",
			"continueOnError": false,
			"displayName": "Annotate namespace to replicate SSL certificate ",
			"enabled": false,
			"inputs": {
				"connectionType": "Kubernetes Service Connection",
				"kubernetesServiceEndpoint": "$(kubernetes_cluster)",
				"azureSubscriptionEndpoint": "",
				"azureResourceGroup": "",
				"kubernetesCluster": "",
				"useClusterAdmin": "false",
				"namespace": "",
				"command": "label",
				"useConfigurationFile": "false",
				"configurationType": "configuration",
				"configuration": "",
				"inline": "",
				"arguments": "namespace $(appname)-$(appenvironment) app=kubed",
				"secretType": "dockerRegistry",
				"secretArguments": "",
				"containerRegistryType": "Azure Container Registry",
				"dockerRegistryEndpoint": "",
				"azureSubscriptionEndpointForSecrets": "",
				"azureContainerRegistry": "",
				"secretName": "",
				"forceUpdate": "true",
				"configMapName": "",
				"forceUpdateConfigMap": "false",
				"useConfigMapFile": "false",
				"configMapFile": "",
				"configMapArguments": "",
				"versionOrLocation": "version",
				"versionSpec": "1.12.5",
				"checkLatest": "false",
				"specifyLocation": "",
				"cwd": "$(System.DefaultWorkingDirectory)",
				"outputFormat": "json"
			},
			"task": {
				"id": "cbc316a2-586f-4def-be79-488a1f503564",
				"definitionType": "task",
				"versionSpec": "1.*"
			},
			"timeoutInMinutes": 0,
			"environment": {}
		}
	],
	"version": {
		"isTest": false,
		"major": 1,
		"minor": 0,
		"patch": 0
	}
}